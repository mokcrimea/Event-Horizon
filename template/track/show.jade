extends ../layout/page

block main
  h1= title
  ul.trackMenu
    a(href='/track/#{track.id}/yandex')
      li Загрузить фотографии
    a(href='/track/#{track.id}/galery')
      li Галерея
    a(href='#')
      li Удалить
        form(method="POST" action="/track/#{track.id}")
          input(type="hidden" name="_method" value="DELETE")
          button(type="submit" onclick="return confirm('Вы уверены, что хотите удалить трек?')")
block content
  img#zoom-balloon-image
  #map.map
  script(src="http://api-maps.yandex.ru/2.0/?load=package.full&lang=ru-RU")
  script.
    var myMap,
        arrayInputDataCoordImg = !{JSON.stringify(images)};

    ymaps.ready(init);


    function init () {
        myMap = new ymaps.Map('map', {
            center: #{coord.substr(1, 50).split(',', 2)},
            zoom:12,
            behaviors: ['default', 'scrollZoom']
        });

        myMap.controls.add('smallZoomControl', {
          left: 3,
          top: 5
        });
        myMap.controls.add(new ymaps.control.TypeSelector(['yandex#map', 'yandex#publicMap', 'yandex#publicMap', 'yandex#satellite', 'yandex#hybrid']));
        myMap.controls.add('miniMap')

        var originalImg = new Image(), pictureWidth, pictureHeight;

        function setPhoto(coord, urlPicture,pictureWidth){
        var myPlacemark = new ymaps.Placemark(coord, {
                balloonContentBody:
                    "<img class='balloon-img' src='"+urlPicture+"' width='"+pictureWidth+"'/>" +
                    "<div class='balloon-fullsize' onclick='ballonImageZoom()'>Увеличить фотографию</div>",
                hintContent: "Показать фотографию",
            }, {
                iconImageHref: urlPicture,
                iconImageSize: [15, 10],
                iconImageOffset: [0, 0]
            });

         myMap.geoObjects.add(myPlacemark);
        };


        function determineImgBalloonSize(i){
          try {
            originalImg.src = arrayInputDataCoordImg[i][1];
          } catch(e) {}
            originalImg.onload = function(){
              pictureWidth = 480;
              pictureHeight = 480 * originalImg.height / originalImg.width;
              if (pictureHeight > 400){
                pictureWidth = pictureWidth - ((pictureHeight - 400) * pictureWidth / pictureHeight);
              }
              setPhoto(arrayInputDataCoordImg[i][0], arrayInputDataCoordImg[i][1], pictureWidth);
              if (i < arrayInputDataCoordImg.length) determineImgBalloonSize(i+1);
            }
        };

        determineImgBalloonSize(0);


            var myPolyline = new ymaps.Polyline(#{coord}, {
              // Описываем свойства геообъекта.
              // Содержимое балуна.
              //- balloonContent: "Ваш трек"
            }, {
              // Задаем опции геообъекта.
              // Отключаем кнопку закрытия балуна.
              //- balloonHasCloseButton: false,
              // Цвет линии.
              strokeColor: "#f4a",
              // Ширина линии.
              strokeWidth: 4,
              // Коэффициент прозрачности.
              strokeOpacity: 0.8
            });

          myMap.geoObjects.add(myPolyline);
        };



        function ballonImageZoom(){
            function getClientHeight(){
                return document.compatMode=='CSS1Compat' && !window.opera?document.documentElement.clientHeight:document.body.clientHeight;
            }

            function getClientWidth(){
                return document.compatMode=='CSS1Compat' && !window.opera?document.documentElement.clientWidth:document.body.clientWidth;
            }

            var imgBalloon = document.getElementsByClassName('balloon-img')[0],
                imgSrc = document.getElementById('zoom-balloon-image'),
                originalImg = new Image(),
                differentSize;

            imgSrc.src = imgBalloon.src.substring(0, imgBalloon.src.length-1)+'orig';
            imgSrc.style.display = "block";
            imgSrc.removeAttribute('width');
            imgSrc.removeAttribute('height');
            originalImg.src = imgSrc.src;

            originalImg.onload = function(){
                var originalHeight = currentHeight = originalImg.height,
                    originalWidth = currentWidth = originalImg.width;

                if ((originalHeight > 750) || (originalWidth > 1100)){

                    if (originalHeight > originalWidth){
                        currentWidth = 750 * originalWidth / originalHeight;
                        currentHeight = 750;
                        imgSrc.setAttribute('height', '750px');
                    }

                    if (originalWidth > originalHeight){
                        differentSize = 1100 * originalHeight / originalWidth;

                        if (differentSize > 750){
                            currentWidth = 750 * originalWidth / originalHeight;
                            currentHeight = 750;
                            imgSrc.setAttribute('height', '750px');
                        } else{
                            currentHeight = 1100 * originalHeight / originalWidth;
                            currentWidth = 1100;
                            imgSrc.setAttribute('width', '1100px');
                        }
                    }
                }

                imgSrc.style.top =((getClientHeight() - currentHeight) / 2) + 'px';
                imgSrc.style.left = ((getClientWidth() - currentWidth) / 2) + 'px';

                setTimeout(function(){
                    imgSrc.style.opacity = "1";
                }, 10);
                imgSrc.addEventListener('click', turnBallonImage);
            }
        }

        function turnBallonImage(){
            var imgSrc = document.getElementById('zoom-balloon-image');
            imgSrc.style.opacity = "0";
            imgSrc.style.top = '0';

            setTimeout(function(){
                 imgSrc.style.display = "none";
            }, 700);

            document.body.removeEventListener('click', turnBallonImage);
        }